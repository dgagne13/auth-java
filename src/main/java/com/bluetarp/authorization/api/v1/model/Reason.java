//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.05.31 at 06:56:01 AM EDT 
//


package com.bluetarp.authorization.api.v1.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Reason.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Reason">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Active"/>
 *     &lt;enumeration value="Bankruptcy - Both"/>
 *     &lt;enumeration value="Bankruptcy - Business"/>
 *     &lt;enumeration value="Bankruptcy - Personal"/>
 *     &lt;enumeration value="Collections Agency"/>
 *     &lt;enumeration value="Contractor Request - Other"/>
 *     &lt;enumeration value="Contractor Request - Seasonal"/>
 *     &lt;enumeration value="Credit Deterioration"/>
 *     &lt;enumeration value="Credit Hold"/>
 *     &lt;enumeration value="Credit Review Required"/>
 *     &lt;enumeration value="De-Implementation of Merchant"/>
 *     &lt;enumeration value="Dormant"/>
 *     &lt;enumeration value="Enrolled"/>
 *     &lt;enumeration value="Inactivity"/>
 *     &lt;enumeration value="Internal Recovery"/>
 *     &lt;enumeration value="Late Stage Recovery"/>
 *     &lt;enumeration value="Legal"/>
 *     &lt;enumeration value="Purchasing"/>
 *     &lt;enumeration value="Testing"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Reason")
@XmlEnum
public enum Reason {

    @XmlEnumValue("Active")
    ACTIVE("Active"),
    @XmlEnumValue("Bankruptcy - Both")
    BANKRUPTCY_BOTH("Bankruptcy - Both"),
    @XmlEnumValue("Bankruptcy - Business")
    BANKRUPTCY_BUSINESS("Bankruptcy - Business"),
    @XmlEnumValue("Bankruptcy - Personal")
    BANKRUPTCY_PERSONAL("Bankruptcy - Personal"),
    @XmlEnumValue("Collections Agency")
    COLLECTIONS_AGENCY("Collections Agency"),
    @XmlEnumValue("Contractor Request - Other")
    CONTRACTOR_REQUEST_OTHER("Contractor Request - Other"),
    @XmlEnumValue("Contractor Request - Seasonal")
    CONTRACTOR_REQUEST_SEASONAL("Contractor Request - Seasonal"),
    @XmlEnumValue("Credit Deterioration")
    CREDIT_DETERIORATION("Credit Deterioration"),
    @XmlEnumValue("Credit Hold")
    CREDIT_HOLD("Credit Hold"),
    @XmlEnumValue("Credit Review Required")
    CREDIT_REVIEW_REQUIRED("Credit Review Required"),
    @XmlEnumValue("De-Implementation of Merchant")
    DE_IMPLEMENTATION_OF_MERCHANT("De-Implementation of Merchant"),
    @XmlEnumValue("Dormant")
    DORMANT("Dormant"),
    @XmlEnumValue("Enrolled")
    ENROLLED("Enrolled"),
    @XmlEnumValue("Inactivity")
    INACTIVITY("Inactivity"),
    @XmlEnumValue("Internal Recovery")
    INTERNAL_RECOVERY("Internal Recovery"),
    @XmlEnumValue("Late Stage Recovery")
    LATE_STAGE_RECOVERY("Late Stage Recovery"),
    @XmlEnumValue("Legal")
    LEGAL("Legal"),
    @XmlEnumValue("Purchasing")
    PURCHASING("Purchasing"),
    @XmlEnumValue("Testing")
    TESTING("Testing");
    private final String value;

    Reason(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Reason fromValue(String v) {
        for (Reason c: Reason.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
